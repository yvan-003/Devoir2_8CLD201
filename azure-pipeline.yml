trigger:
- master
# The pipeline is triggered for every change to the "master" branch.

pool: "default"
# Specifies the default agent pool to execute tasks in the pipeline.

variables:
  - name: resourceGroupName
    value: 'RG_Devoir_2'
  - name: rgLocation
    value: 'Canada Central'
  - name: AzureAppFunction
    value: 'function'
  - name: AzureFunctionAppName
    value: 'myfunctionappdevoir2'

jobs:
- job: StorageAccount
  displayName: 'Deploy Storage Account'
  steps:
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'Abo Devoir 2(dde5eab5-8f95-425b-b698-3a605a01ad88)'
      subscriptionId: 'dde5eab5-8f95-425b-b698-3a605a01ad88'
      action: 'Create Or Update Resource Group'
      resourceGroupName: 'RG_Devoir_2'
      location: 'Canada Central'
      templateLocation: 'Linked artifact'
      csmFile: '$(Build.SourcesDirectory)\StorageAccount\azuredeploy.json'
      csmParametersFile: '$(Build.SourcesDirectory)\StorageAccount\azuredeploy.parameters.json'
      deploymentMode: 'Incremental'

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'Abo Devoir 2(dde5eab5-8f95-425b-b698-3a605a01ad88)'
      subscriptionId: 'dde5eab5-8f95-425b-b698-3a605a01ad88'
      action: 'Create Or Update Resource Group'
      resourceGroupName: 'RG_Devoir_2'
      location: 'Canada Central'
      templateLocation: 'Linked artifact'
      csmFile: '$(Build.SourcesDirectory)\FunctionApp\azuredeploy.json'
      csmParametersFile: '$(Build.SourcesDirectory)\FunctionApp\azuredeploy.parameters.json'
      deploymentMode: 'Incremental'

- job: FunctionBuild
  displayName: 'Build Azure Function'
  dependsOn: StorageAccount
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Restore Project'
    inputs:
      command: 'restore'
      projects: '$(Build.SourcesDirectory)/$(AzureAppFunction)/*.csproj'
      
  - task: DotNetCoreCLI@2
    displayName: 'Build Azure Function'
    inputs:
      command: 'build'
      projects: '$(Build.SourcesDirectory)/$(AzureAppFunction)/*.csproj'
      arguments: '--configuration Release --output $(Build.BinariesDirectory)'

  - task: DotNetCoreCLI@2
    displayName: 'Publish Azure Function'
    inputs:
      command: 'publish'
      projects: '$(Build.SourcesDirectory)/$(AzureAppFunction)/*.csproj'
      arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
      publishWebProjects: false
      zipAfterPublish: true
      modifyOutputPath: false
      
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'

- job: FunctionDeploy
  displayName: 'Deploy Azure Function'
  dependsOn: FunctionBuild
  steps:
  - checkout: none
  - task: DownloadBuildArtifacts@1
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'drop'
      downloadPath: '$(System.ArtifactsDirectory)'
      cleanDestinationFolder: true

  - task: AzureFunctionApp@2
    inputs:
      connectedServiceNameARM: 'Abo Devoir 2(dde5eab5-8f95-425b-b698-3a605a01ad88)'
      appType: 'functionApp'
      appName: '$(AzureFunctionAppName)'
      deployToSlotOrASE: true
      resourceGroupName: '$(resourceGroupName)'
      slotName: 'production'
      package: '$(System.ArtifactsDirectory)/drop/**/*.zip'
      deploymentMethod: 'runFromPackage'
      appSettings: '-blobconnectionstring $(blobstring) -blobonnectionstring__blob "https://$(AzureBlob).blob.core.windows.net/"'
